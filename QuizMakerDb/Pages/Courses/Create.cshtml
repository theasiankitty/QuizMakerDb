@page
@model QuizMakerDb.Pages.Courses.CreateModel

@{
	ViewData["Title"] = "Create";
}

<div class="container-fluid">
	<nav aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item fs-3"><a asp-page="Index">Courses</a></li>
			<li class="breadcrumb-item fs-3 active" aria-current="page">Create</li>
		</ol>
	</nav>
	<form class="row justify-content-center mt-3" method="post">
		@Html.AntiForgeryToken()
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>
		<input asp-for="CourseVM.Name" type="hidden" />
		<input asp-for="CourseVM.Active" type="hidden" />
		<div class="col-xs-12 col-sm-8 col-md-8 col-lg-7 col-xl-5 col-xxl-4">
			<div class="card card-primary card-outline mb-4">
				<div class="card-header">
					<div class="card-title fw-medium">Create Course</div>
				</div>
				<div class="card-body">
					<div class="container-fluid">
						<div class="row">
							<div class="col-md-12">
								<div class="form-group">
									<label for="courseName" class="form-label">Name</label>
									<input class="form-control" id="courseName" placeholder="Name" maxlength="30" autocomplete="off" onchange="setCourse()" />
									<span for="courseName" class="text-danger field-validation-error" id="invalidCourseName"></span>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="card-footer">
					<div class="row">
						<div class="col-12 text-end">
							<input type="submit" value="Create" class="btn btn-primary" id="submitBtn" />
							<a asp-page="Index" class="btn btn-secondary">Cancel</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</form>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		function initializeCourseName() {
			$('#submitBtn').prop('disabled', true);
			setCourse();
		}

		function setCourse() {
			var courseName = $('#courseName').val();

			if (courseName !== '') {
				$.ajax({
					type: 'GET',
					url: '/Courses/CheckCourse?handler=CheckCourse',
					data: { name: courseName },
					success: function (result) {
						if (result === 'OK') {
							$('#submitBtn').prop('disabled', false);
							$('#courseName').removeClass('is-invalid');
							$('#invalidCourseName').text('');
							$('#CourseVM_Name').val(courseName);
						} else {
							console.log('invalid');
							$('#submitBtn').prop('disabled', true);
							$('#courseName').addClass('is-invalid');
							$('#invalidCourseName').text('Course may be invalid or is already in use.');
						}
					},
					error: function (xhr, status, error) {
						console.error("Error: " + error);
					}
				});
			}
		}

		initializeCourseName();
	</script>
}
