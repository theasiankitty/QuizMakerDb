@page
@model QuizMakerDb.Pages.Students.CreateModel

@{
	ViewData["Title"] = "Create";
}

<div class="container-fluid">
	<nav aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item fs-3"><a asp-page="Index">Students</a></li>
			<li class="breadcrumb-item fs-3 active" aria-current="page">Create</li>
		</ol>
	</nav>
	<form class="row justify-content-center mt-3" method="post">
		@Html.AntiForgeryToken()
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>
		<input asp-for="StudentVM.UserName" type="hidden" />
		<input asp-for="StudentVM.Active" type="hidden" />
		<div class="col-xs-12 col-sm-11 col-md-10 col-lg-9 col-xl-8 col-xxl-7">
			<div class="card card-primary card-outline mb-4">
				<div class="card-header">
					<div class="card-title fw-medium">Create Student</div>
				</div>
				<div class="card-body">
					<div class="container-fluid">
						<div class="row">
							<div class="col-md-12">
								<div class="form-group">
									<label asp-for="StudentVM.FirstName" class="form-label"></label>
									<input asp-for="StudentVM.FirstName" class="form-control" placeholder="First Name" maxlength="30" />
									<span asp-validation-for="StudentVM.FirstName" class="text-danger"></span>
								</div>
							</div>
							<div class="col-md-12">
								<div class="form-group">
									<label asp-for="StudentVM.MiddleName" class="form-label"></label>
									<input asp-for="StudentVM.MiddleName" class="form-control" placeholder="Middle Name" maxlength="30" />
									<span asp-validation-for="StudentVM.MiddleName" class="text-danger"></span>
								</div>
							</div>
							<div class="col-md-12">
								<div class="form-group">
									<label asp-for="StudentVM.LastName" class="form-label"></label>
									<input asp-for="StudentVM.LastName" class="form-control" placeholder="Last Name" maxlength="30" />
									<span asp-validation-for="StudentVM.LastName" class="text-danger"></span>
								</div>
							</div>
							<div class="col-md-4">
								<div class="form-group">
									<label asp-for="StudentVM.Sex" class="form-label"></label>
									<select asp-for="StudentVM.Sex" asp-items="Html.GetEnumSelectList<Sex>()" class="form-control form-select" onchange="onChangeSex()"></select>
									<span asp-validation-for="StudentVM.Sex" class="text-danger"></span>
								</div>
							</div>
							<div class="col-md-8">
								<div class="form-group">
									<label asp-for="StudentVM.Email" class="form-label"></label>
									<input asp-for="StudentVM.Email" class="form-control" placeholder="name@example.com" maxlength="100" />
									<span asp-validation-for="StudentVM.Email"></span>
								</div>
							</div>
							<div class="col-md-12">
								<div class="form-group">
									<label asp-for="StudentVM.UserName" class="form-label"></label>
									<div class="input-group mb-3">
										<input type="search" class="form-control" id="userNameInput" aria-label="User Name" placeholder="User Name" maxlength="20" onchange="checkValidUserName()" autocomplete="off" oninput="this.value = this.value.replace(/[^0-9]/g,'')">
										<div class="input-group-text" id="iconContainer">
										</div>
									</div>
									<span asp-validation-for="StudentVM.UserName" class="text-danger"></span>
								</div>
							</div>
							<div class="col-md-12">
								<div class="form-check">
									<input asp-for="StudentVM.isIrregular" class="form-check-input" type="checkbox">
									<label asp-for="StudentVM.isIrregular" class="form-check-label">
										Check if the Student is irregular.
									</label>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="card-footer">
					<div class="row">
						<div class="col-12 text-end">
							<input type="submit" value="Create" class="btn btn-primary" id="submitBtn" />
							<a asp-page="Index" class="btn btn-secondary">Cancel</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</form>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		function initializeUserName() {
			$('#iconContainer').append('<i class="bi bi-person-x-fill text-danger" id="iconFalse"></i>');
			$('#submitBtn').prop('disabled', true);
		}

		function checkValidUserName() {
			var userName = $('#userNameInput').val();
			$('#iconFalse').remove();
			$('#iconTrue').remove();
			$('#loadingSpinner').remove();

			$('#iconContainer').append('<div class="spinner-border spinner-border-sm text-primary" id="loadingSpinner" role="status"><span class="visually-hidden"></span></div>');

			if (userName !== '') {
				$('#userNameInput').removeClass('is-invalid');

				$.ajax({
					type: 'GET',
					url: '/CheckUserName/UserName?handler=UserName',
					data: { userName: userName },
					success: function (result) {
						$('#loadingSpinner').remove();

						if (result === 'OK') {
							$('#iconContainer').append('<i class="bi bi-person-check-fill text-success" id="iconTrue"></i>');
							$('#submitBtn').prop('disabled', false);
							$('#userNameInput').removeClass('is-invalid');
							$('#StudentVM_UserName').val(userName);
						} else {
							handleInvalidUserName();
						}
					},
					error: function (xhr, status, error) {
						console.error("Error: " + error);
						handleInvalidUserName();
					}
				});
			} else {
				handleInvalidUserName();
			}
		}

		function handleInvalidUserName() {
			$('#loadingSpinner').remove();
			$('#iconContainer').append('<i class="bi bi-person-x-fill text-danger" id="iconFalse"></i>');
			$('#submitBtn').prop('disabled', true);
			$('#userNameInput').addClass('is-invalid');
		}

		function onChangeSex() {
			var value = event.srcElement.value;
		}

		initializeUserName();
	</script>
}

