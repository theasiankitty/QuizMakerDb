@page
@using QuizMakerDb.Data.Identity
@model QuizMakerDb.Pages.QuizSubjects.IndexModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject UserManager<AppUser> userManager
@{
	ViewData["Title"] = "Index";

	var requestToken = Antiforgery.GetAndStoreTokens(HttpContext).RequestToken;

	var user = await userManager.GetUserAsync(User);

	bool isAdmin = await userManager.IsInRoleAsync(user, Constants.ROLE_ADMIN);

	var hasQuizSubjects = Model.QuizSubjects.Count > 0;

	var firstDisabled = Model.QuizSubjects.PageIndex == 1 ? "disabled" : "";
	var lastDisabled = Model.QuizSubjects.PageIndex == Model.QuizSubjects.TotalPages ? "disabled" : "";
	var prevDisabled = !Model.QuizSubjects.HasPreviousPage ? "disabled" : "";
	var nextDisabled = !Model.QuizSubjects.HasNextPage ? "disabled" : "";

	int length = 3;
	int start = 1;
	int center = Math.Abs(length / 2) + 1;

	if (Model.QuizSubjects.PageIndex < center)
	{
		start = 1;
	}
	else
	{
		start = (Model.QuizSubjects.PageIndex - center) + 1;
	}

	int end = start + length;

	if (Model.QuizSubjects.TotalPages == 1)
		end = 1;
	if (end > Model.QuizSubjects.TotalPages)
	{
		end = Model.QuizSubjects.TotalPages + 1;
		start = end - length;
		if (start < 1)
		{
			start = 1;
			end = length;
		}
	}
}

<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<div class="container-fluid">
	<nav aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item fs-3"><a href="/QuizQuestions/Index?quizId=@Model.QuizVM.Id">Publish Quiz - @Model.QuizVM.Title</a></li>
		</ol>
	</nav>
	<div class="row justify-content-end mt-3">
		<div class="col-5">
			<button type="button" class="btn btn-outline-primary btn-block text-center" data-bs-toggle="modal" data-bs-target="#publishModal">
				<i class="bi bi-plus-lg"></i>
				Publish
			</button>
		</div>
		<form class="col-7 text-end" asp-page="./Index" method="get">
			@Html.AntiForgeryToken()
			<button type="button" class="btn btn-primary btn-block" data-bs-toggle="modal" data-bs-target="#searchModal">
				<i class="bi bi-search"></i>
				Search
			</button>
			<a class="btn btn-primary btn-block"
			   asp-page="./Index"
			   asp-route-sortColumn=""
			   asp-route-sortOrder=""
			   asp-route-pageIndex="1"
			   asp-route-quizId="@Model.QuizVM.Id"
			   asp-route-searchSubject=""
			   asp-route-searchSection="">
				<i class="bi bi-arrow-clockwise"></i>
				Refresh
			</a>
		</form>
	</div>
</div>

<div class="container-fluid">
	<div class="row mt-3">
		<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 col-xxl-12">
			<div class="row">
				<div class="col-12">
					<div class="card">
						<div class="card-header">
							<h3 class="card-title fw-medium">Published Quiz</h3>
						</div>
						@if (hasQuizSubjects)
						{
							<div class="card-body">
								<table class="table table-bordered">
									<thead>
										<tr>
											<th class="d-none d-sm-table-cell bg-body-secondary bg-gradient" style="min-width: 105px; width: 105px;">
												<a class="text-decoration-none text-dark"
												   asp-page="./Index"
												   asp-route-sortColumn="id"
												   asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection">
													<div class="container-fluid">
														<div class="row">
															<div class="col-10">
																#
															</div>
															<div class="col-2 text-end p-0">
																@if (Model.SortColumn == "id")
																{
																	<i class="bi bi-sort-up" @(Model.SortOrder == "asc" ? "hidden" : "")></i>
																	<i class="bi bi-sort-down-alt" @(Model.SortOrder == "asc" ? "" : "hidden")></i>
																}
																else
																{
																	<i class="bi bi-arrow-down-up" style="font-size: 13px;"></i>
																}
															</div>
														</div>
													</div>
												</a>
											</th>
											<th class="bg-body-secondary bg-gradient">
												<a class="text-decoration-none text-dark"
												   asp-page="./Index"
												   asp-route-sortColumn="subject"
												   asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection">
													<div class="container-fluid">
														<div class="row">
															<div class="col-10">
																@Html.DisplayNameFor(model => model.QuizSubjects[0].Subject)
															</div>
															<div class="col-2 text-end p-0">
																@if (Model.SortColumn == "subject")
																{
																	<i class="bi bi-sort-up" @(Model.SortOrder == "asc" ? "hidden" : "")></i>
																	<i class="bi bi-sort-down-alt" @(Model.SortOrder == "asc" ? "" : "hidden")></i>
																}
																else
																{
																	<i class="bi bi-arrow-down-up" style="font-size: 13px;"></i>
																}
															</div>
														</div>
													</div>
												</a>
											</th>
											<th class="bg-body-secondary bg-gradient">
												<a class="text-decoration-none text-dark"
												   asp-page="./Index"
												   asp-route-sortColumn="course_year"
												   asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection">
													<div class="container-fluid">
														<div class="row">
															<div class="col-10">
																@Html.DisplayNameFor(model => model.QuizSubjects[0].CourseYear)
															</div>
															<div class="col-2 text-end p-0">
																@if (Model.SortColumn == "course_year")
																{
																	<i class="bi bi-sort-up" @(Model.SortOrder == "asc" ? "hidden" : "")></i>
																	<i class="bi bi-sort-down-alt" @(Model.SortOrder == "asc" ? "" : "hidden")></i>
																}
																else
																{
																	<i class="bi bi-arrow-down-up" style="font-size: 13px;"></i>
																}
															</div>
														</div>
													</div>
												</a>
											</th>
											<th class="bg-body-secondary bg-gradient">
												<a class="text-decoration-none text-dark"
												   asp-page="./Index"
												   asp-route-sortColumn="section"
												   asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection">
													<div class="container-fluid">
														<div class="row">
															<div class="col-10">
																@Html.DisplayNameFor(model => model.QuizSubjects[0].Section)
															</div>
															<div class="col-2 text-end p-0">
																@if (Model.SortColumn == "section")
																{
																	<i class="bi bi-sort-up" @(Model.SortOrder == "asc" ? "hidden" : "")></i>
																	<i class="bi bi-sort-down-alt" @(Model.SortOrder == "asc" ? "" : "hidden")></i>
																}
																else
																{
																	<i class="bi bi-arrow-down-up" style="font-size: 13px;"></i>
																}
															</div>
														</div>
													</div>
												</a>
											</th>
											<th class="d-none d-sm-table-cell bg-body-secondary bg-gradient">
												<a class="text-decoration-none text-dark"
												   asp-page="./Index"
												   asp-route-sortColumn="code"
												   asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection">
													<div class="container-fluid">
														<div class="row">
															<div class="col-10">
																@Html.DisplayNameFor(model => model.QuizSubjects[0].Code)
															</div>
															<div class="col-2 text-end p-0">
																@if (Model.SortColumn == "code")
																{
																	<i class="bi bi-sort-up" @(Model.SortOrder == "asc" ? "hidden" : "")></i>
																	<i class="bi bi-sort-down-alt" @(Model.SortOrder == "asc" ? "" : "hidden")></i>
																}
																else
																{
																	<i class="bi bi-arrow-down-up" style="font-size: 13px;"></i>
																}
															</div>
														</div>
													</div>
												</a>
											</th>
											<th class="bg-body-secondary bg-gradient" style="min-width: 145px; width: 150px;">
												<a class="text-decoration-none text-dark"
												   asp-page="./Index"
												   asp-route-sortColumn="active"
												   asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection">
													<div class="container-fluid">
														<div class="row">
															<div class="col-10">
																@Html.DisplayNameFor(model => model.QuizSubjects[0].Active)
															</div>
															<div class="col-2 text-end p-0">
																@if (Model.SortColumn == "active")
																{
																	<i class="bi bi-sort-up" @(Model.SortOrder == "asc" ? "hidden" : "")></i>
																	<i class="bi bi-sort-down-alt" @(Model.SortOrder == "asc" ? "" : "hidden")></i>
																}
																else
																{
																	<i class="bi bi-arrow-down-up" style="font-size: 13px;"></i>
																}
															</div>
														</div>
													</div>
												</a>
											</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var item in Model.QuizSubjects)
										{
											<tr class="align-middle">
												<td class="d-none d-sm-table-cell">
													@Html.DisplayFor(modelItem => item.Id)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.Subject)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.CourseYear)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.Section)
												</td>
												<td class="d-none d-sm-table-cell">
													@Html.DisplayFor(modelItem => item.Code)
												</td>
												<td class="text-center d-flex align-items-center justify-content-center">
													<div class="form-check form-switch">
														<input class="form-check-input custom-switch" type="checkbox" role="switch" data-id="@item.Id" data-code="@item.Code" @(item.Active ? "checked" : "")>
													</div>
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
							<div class="card-footer clearfix">
								<div class="container-fluid">
									<div class="row justify-content-end">
										<div class="col text-start d-none d-sm-block">
											<small>@Model.TotalItems record@(Model.TotalItems != 1 ? "s" : "") in total</small>
										</div>
										@if (Model.TotalItems > 10)
										{
											<div class="col text-end">
												<a asp-page="./Index"
												   asp-route-sortColumn="@Model.SortColumn"
												   asp-route-sortOrder="@Model.SortOrder"
												   asp-route-pageIndex="1"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection"
												   class="btn btn-sm btn-secondary @(Model.QuizSubjects.PageIndex == 1 ? "disabled" : "")">
													<i class="nav-icon bi bi-chevron-double-left"></i>
												</a>

												<a asp-page="./Index"
												   asp-route-sortColumn="@Model.SortColumn"
												   asp-route-sortOrder="@Model.SortOrder"
												   asp-route-pageIndex="@(Model.QuizSubjects.PageIndex - 1)"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection"
												   class="btn btn-sm btn-secondary @(Model.QuizSubjects.PageIndex <= 1 ? "disabled" : "")">
													<i class="nav-icon bi bi-chevron-left"></i>
												</a>

												@for (int i = start; i < end; i++)
												{
													<a asp-page="./Index"
													   asp-route-sortColumn="@Model.SortColumn"
													   asp-route-sortOrder="@Model.SortOrder"
													   asp-route-pageIndex="@i"
													   asp-route-quizId="@Model.QuizVM.Id"
													   asp-route-searchSubject="@Model.SearchSubject"
													   asp-route-searchSection="@Model.SearchSection"
													   class="btn btn-sm btn-secondary @(Model.QuizSubjects.PageIndex == i ? "disabled" : "")">
														@i
													</a>
												}

												<a asp-page="./Index"
												   asp-route-sortColumn="@Model.SortColumn"
												   asp-route-sortOrder="@Model.SortOrder"
												   asp-route-pageIndex="@(Model.QuizSubjects.PageIndex + 1)"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection"
												   class="btn btn-sm btn-secondary @(Model.QuizSubjects.PageIndex >= Model.QuizSubjects.TotalPages ? "disabled" : "")">
													<i class="nav-icon bi bi-chevron-right"></i>
												</a>

												<a asp-page="./Index"
												   asp-route-sortColumn="@Model.SortColumn"
												   asp-route-sortOrder="@Model.SortOrder"
												   asp-route-pageIndex="@Model.QuizSubjects.TotalPages"
												   asp-route-quizId="@Model.QuizVM.Id"
												   asp-route-searchSubject="@Model.SearchSubject"
												   asp-route-searchSection="@Model.SearchSection"
												   class="btn btn-sm btn-secondary @(Model.QuizSubjects.PageIndex == Model.QuizSubjects.TotalPages ? "disabled" : "")">
													<i class="nav-icon bi bi-chevron-double-right"></i>
												</a>
											</div>
										}
									</div>
								</div>
							</div>
						}
						else
						{
							<div style="height: 400px">
								<div class="h-100 d-flex justify-content-center align-items-center">
									<div class="container-fluid">
										<div class="row justify-content-center">
											<div class="col-12 text-center text-secondary">
												<h2>No Records Found</h2>
											</div>
											<div class="col-12 text-center text-secondary">
												<i class="bi bi-folder-x display-1"></i>
											</div>
										</div>
									</div>
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="publishModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="publishModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="modalHeaderTitle">
					<span class="pe-1">Publish Quiz - Section</span>
					<i class="bi bi-book"></i>
				</h1>
				<button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="container-fluid">
					<div class="row">
						<div class="col-12">
							<input type="hidden" id="hiddenSubjectId" />
							<div class="input-group input-group-lg mb-3">
								<select class="form-select" id="teacherSubjectSelect">
									<option value="" selected>Select Course Year Subject</option>
									@foreach (var subject in ViewBag.TeacherSubjects)
									{
										<option value="@subject.Id" data-subject="@subject.SubjectId">@subject.Name</option>
									}
								</select>
								<button class="btn btn-outline-secondary" type="button" id="searchSectionButton" onclick="updateAddButton()"></button>
							</div>
						</div>
						<div class="col-12" id="searchLoading" style="display: none;">
							<div class="d-flex align-items-center">
								<strong role="status">Searching...</strong>
								<div class="spinner-border spinner-border-sm ms-auto" aria-hidden="true"></div>
							</div>
						</div>
						<div class="overflow-auto" id="resultContainer" style="max-height: 500px; display: none;">
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer text-end" id="resultFooter" style="display: none;">
				<div class="container">
					<div class="row">
						<div class="col-6 text-start">
							<button class="btn btn-dark" id="loadMoreBtn" type="button" onclick="getAllSections()">Load more</button>
						</div>
						<div class="col-6 text-end">
							<button class="btn btn-success" id="selectAllBtn" type="button">Select All</button>
							<button class="btn btn-primary" id="submitSectionBtn" type="button" onclick="submitSectionSubjects()"></button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		var currentPage = 0;
		var pageSize = 10;
		var loadedRecords = 0;
		var submitButton = $('#submitSectionBtn');
		var searchButton = $('#searchSectionButton');
		var teacherSubjectSelect = $('#teacherSubjectSelect');
		var selectAllbutton = $('#selectAllBtn');

		$(document).ready(function () {
			searchButton.click(function () {
				var subject = teacherSubjectSelect.val();
				searchSectionSujbect(subject);

				$('#resultContainer').slideUp();
				$('#resultFooter').slideUp();
			});

			searchButton.text('Search');

			selectAllbutton.on('click', function () {
				var allChecked = $('input[name="selectedSectionIds"]:checked').length === $('input[name="selectedSectionIds"]').length;

				$('input[name="selectedSectionIds"]').prop('checked', !allChecked);

				$('.section-card').each(function () {
					var checkbox = $(this).find('input[name="selectedSectionIds"]');
					if (allChecked) {
						$(this).removeClass('bg-primary text-light');
					} else {
						$(this).addClass('bg-primary text-light');
					}
				});

				$(this).text(allChecked ? 'Select All' : 'Deselect All');

				updateAddButton();
			});

			$('#teacherSubjectSelect').change(function() {
				const selectedOption = $(this).find('option:selected');
				const subjectId = selectedOption.data('subject');

				$('#hiddenSubjectId').val(subjectId);
			});

			$('.form-check-input').change(function () {
				const activeId = $(this).data('id');
				const isChecked = $(this).is(':checked');
				const code = $(this).data('code');

				updateActiveStatus(activeId, isChecked, code);
			});

			updateAddButton();
		});

		function toggleCheckbox(card) {
			var checkbox = $(card).find('input[type="checkbox"]');
			var isChecked = checkbox.prop('checked');

			checkbox.prop('checked', !isChecked);

			if (!isChecked) {
				$(card).addClass('bg-primary text-light');
			} else {
				$(card).removeClass('bg-primary text-light');
			}

			updateAddButton();
		}

		function updateAddButton() {
			var checkedCount = $('input[name="selectedSectionIds"]:checked').length;
			var allCheckBox = $('input[name="selectedSectionIds"]').length;

			if (checkedCount === allCheckBox) {
				selectAllbutton.text('Deselect All');
			} else {
				selectAllbutton.text('Select All');
			}

			if (checkedCount > 0) {
				submitButton.prop('disabled', false);
				submitButton.text('Add (' + checkedCount + ')');
			} else {
				resetButton();
			}
		}

		function resetButton() {
			submitButton.prop('disabled', true);
			submitButton.text('Add');
		}

		function searchSectionSujbect(subject) {
			resetButton();

			$('#resultContainer .card').fadeOut(400, function () {
				$(this).remove();
			});

			$('#resultContainer .errorMessage').fadeOut(400, function () {
				$(this).remove();
			});

			if (subject !== '') {
				$('#searchLoading').slideDown();
				$('#loadMoreBtn').hide();
				getSearchSectionBySubject(subject);
			} else {
				alert('select is empty');
				$('#searchLoading').slideUp();
			}
		}

		function showErrorMessage(message) {
			var errorMessage = '';

			if (message === 'empty student') {
				errorMessage = `
					<div class="errorMessage">
						<p>No sections found.</p>
						<small>Please check if the quiz has been published for this section. <br/>If the section still does not appear, contact your administrator for assistance.</small>
					</div>
					`;
			} else {
				errorMessage = `
					<div class="errorMessage">
						<p>Error Retrieving Data.</p>
					</div>
					`;
			}

			$('#resultContainer').append(errorMessage);
		}

		function getSearchSectionBySubject(courseYearId) {
			$.ajax({
				type: 'GET',
				url: '/QuizSubjects/SearchSection?handler=SearchSectionBySubject',
				data: {
					courseYearId: courseYearId,
					quizId: "@Model.QuizVM.Id",
					teacherId: "@Model.QuizVM.TeacherId"
				},
				success: function (data) {
					$('#searchLoading').slideUp(400, function () {
						if (data.message === 'OK' && data.sections.length != 0) {
							var cards = '';

							$.each(data.sections, function (index, item) {
								cards += `
									<div class="card section-card mb-3" style="cursor: pointer;" onclick="toggleCheckbox(this)">
										<div class="card-body">
											<div class="row">
												<div class="col-11">
													<h5 class="card-title"><strong>${item.courseYear}</strong></h5>
													<br />
													<p class="card-text">Section (${item.name})</p>
												</div>
												<div class="col-1 d-flex justify-content-end align-items-center">
													<input class="form-check-input me-2 mt-0" type="checkbox" name="selectedSectionIds" value="${item.id}" onchange="updateAddButton()" style="transform: scale(1.3); display: none;" />
												</div>
											</div>
										</div>
									</div>
								`;
							});

							$('#resultContainer').append(cards);

							$('#resultContainer').animate({ scrollTop: $('#resultContainer')[0].scrollHeight }, 500);

							$('#resultFooter').slideDown();
						} else {
							showErrorMessage('empty student');
						}

						$('#resultContainer').slideDown(200);
					});

				},
				error: function (xhr, status, error) {
					$('#searchLoading').slideUp(function () {
						showErrorMessage('error retrieving');

						$('#resultContainer').slideDown(200);
					});
					console.error("Error: " + error);
				}
			});
		}

		function submitSectionSubjects() {
			var sectionSubjects = [];
			$("[name=selectedSectionIds]:checked").each(function (i, elem) {
				sectionSubjects.push({
					quizId: "@Model.QuizVM.Id",
					sectionId: elem.value,
					subjectId: $('#hiddenSubjectId').val()
				});
			});

			$.ajax({
				type: 'POST',
				url: '/QuizSubjects/Create',
				dataType: 'json',
				contentType: 'application/json',
				headers: {
					"X-CSRF-TOKEN": $('#RequestVerificationToken').val()
				},
				data: JSON.stringify(sectionSubjects),
				success: function (data) {
					var newUrl = `${window.location.pathname}?quizId=${@Model.QuizVM.Id}`;
					window.location.href = newUrl;
				}
			});
		}

		function updateActiveStatus(id, status, code) {
			var data = {
				id: id,
				active: status
			};

			$.ajax({
				type: 'POST',
				url: '/QuizSubjects/Update',
				dataType: 'json',
				contentType: 'application/json',
				headers: {
					"X-CSRF-TOKEN": $('#RequestVerificationToken').val()
				},
				data: JSON.stringify(data),
				success: function (data) {
					var newUrl = `${window.location.pathname}?quizId=${@Model.QuizVM.Id}`;
					window.location.href = newUrl;
				}
			});
		}
	</script>
}
